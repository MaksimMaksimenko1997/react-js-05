{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/InputForm/InputForm.js","components/Filter/Filter.js","components/Phonebook/PhonebookItem.js","components/Phonebook/PhonebookItem.container.js","components/Phonebook/Phonebook.js","components/Phonebook/Phonebook.container.js","components/Container/Container.js","App.js","index.js","components/InputForm/InputForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","contact","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","rootReducer","devTools","process","persistor","persistStore","InputForm","displayError","handleChange","event","currentTarget","value","setState","existError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","props","onSubmit","some","item","toLowerCase","reset","this","CSSTransition","in","transition","Slide","newestOnTop","rtl","pauseOnFocusLoss","duration","className","s","form","label","htmlFor","type","onChange","input","placeholder","autoComplete","autoFocus","btn","Component","connect","dispatch","Filter","wrapper","defaultProps","target","PhonebookItem","onDelete","find","close","onClick","getVisibleContacts","normalizedFilter","includes","Phonebook","TransitionGroup","component","list","map","timeout","classNames","Container","title","children","section","appear","heading","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.32b0ee14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__2pcyU\",\"item\":\"Phonebook_item__2Pcft\",\"close\":\"Phonebook_close__1BIQ5\",\"enter\":\"Phonebook_enter__NJHbn\",\"enterActive\":\"Phonebook_enterActive__342sv\",\"exit\":\"Phonebook_exit__31Nmg\",\"exitActive\":\"Phonebook_exitActive__113G8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__3n-RH\",\"label\":\"Filter_label__2V_63\",\"input\":\"Filter_input__2GqVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__12izY\",\"heading\":\"Container_heading__1ydt0\",\"appear\":\"Container_appear__3GU3f\",\"appearActive\":\"Container_appearActive__1qDVH\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\"contacts/addContact\", ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contacts/deleteContact\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts: items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./phonebook/phonebook-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\", \"_persist\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport {Slide, toast, ToastContainer} from \"react-toastify\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\n\nimport s from \"./InputForm.module.css\";\n\nclass InputForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ).isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    displayError: false,\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  existError = ()=> {\n    toast.error(\"Contact already in list\", {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    this.setState({displayError: true})\n  } \n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, displayError } = this.state;\n    const { contacts, onSubmit } = this.props;\n    const sameContact = contacts.some(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    if (sameContact) {\n     this.existError();\n      this.reset();\n      return;\n    } else if (displayError) {\n      this.setState({displayError: false})\n    }\n    onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number, displayError } = this.state;\n    return (\n      <>\n       <CSSTransition in={displayError}>\n          <ToastContainer\n            transition={Slide}\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            duration={250}\n          />\n        </CSSTransition>\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n\n        <label className={s.label} htmlFor=\"number\">\n          Number\n        </label>\n        <input\n          id=\"number\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"number\"\n          value={number}\n          placeholder=\"Phone number\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n      </>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(actions.addContact({ name, number })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\n\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.wrapper}>\n    <label className={s.label}>\n      Find by Name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.defaultProps = {\n  filter: \"\",\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ filter }) => ({\n  value: filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) => dispatch(actions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\n\nconst PhonebookItem = ({ contacts={name:\"\",number:\"\"}, id, onDelete }) => {\nconst contact = contacts.find(item => item.id === id) || {};\n  return (\n    <>\n      <span>\n        {contact.name} : {contact.number}\n      </span>\n      <button type=\"button\" className={s.close+\" btn\"} onClick={() => {\n        onDelete(id)\n        }}>\n        +\n      </button>\n    </>\n  );\n};\n\nPhonebookItem.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default PhonebookItem;\n","import { connect } from \"react-redux\";\n\nimport actions from \"../../redux/phonebook/phonebook-actions\";\nimport PhonebookItem from \"./PhonebookItem\";\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  const filtered = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n  return filtered;\n};\n\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => {\n  return {\n    contacts: getVisibleContacts(contacts, filter),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\n\nimport PhonebookItem from \"./PhonebookItem.container\";\n\nimport s from \"./Phonebook.module.css\";\n\nconst Phonebook = ({ contacts }) => {\n  return (\n    <>\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.map((contact) => (\n        <CSSTransition timeout={250} classNames={s}>\n        <li className={s.item} key={contact.id}>\n          <PhonebookItem id={contact.id} />\n        </li>\n      </CSSTransition>\n      ))}\n    </TransitionGroup>\n    </>\n  );\n};\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired })\n  ),\n};\n\nexport default Phonebook;\n","import { connect } from \"react-redux\";\r\n\r\n\r\nimport Phonebook from \"./Phonebook\";\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filtered = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => {\r\n  return {\r\n    contacts: getVisibleContacts(contacts, filter),\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Phonebook);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <CSSTransition in={true} appear timeout={500} classNames={s}>\n        {title && <h2 className={s.heading}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n};\nContainer.defaultProps = {\n  title: \" \",\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import React from \"react\";\n\nimport InputForm from \"./components/InputForm/InputForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport Phonebook from \"./components/Phonebook/Phonebook.container\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => (\n  <>\n    <Container title=\"Phonebook\">\n      <InputForm />\n    </Container>\n    <Container>\n      <Filter />\n      <Phonebook />\n    </Container>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__2CiqE\",\"label\":\"InputForm_label__3o5Is\",\"input\":\"InputForm_input__37176\",\"btn\":\"InputForm_btn__2hLnj\"};"],"sourceRoot":""}